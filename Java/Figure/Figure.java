package ua.Kharkov.Hitman.Figure;

/*
 * Определите классы: "Фигура", "Прямоугольник", "Треугольник", "Круг"
 * 
 * Фигура должна быть абстрактным классом. Этот класс хранит координаты х и
 * у - расположения фигуры.
 * 
 * Круг, Прямоугольник (Rectangle) и Треугольник (Triangle) должны
 * наследовать Фигура.
 * 
 * Определить следующие методы класса Круг: - првоерка что точка находится в
 * кругу - проверка что другой круг находится в кругу
 */

public abstract class Figure {
	/**
	 * Кордината Х
	 * 
	 */
	private int x;

	/**
	 * Кордината У
	 */
	protected int y;

	/**
	 * Метод возвращает координату х
	 * 
	 * @return x
	 */
	public int getX() {
		return x;
	}

	/**
	 * Метод устанавливает значение координаты х
	 * 
	 * @param x
	 *            новая координата х
	 */
	public void setX(int x) {
		this.x = x;
	}

	/**
	 * Метод возвращает координату y
	 * 
	 * @return y
	 */
	public int getY() {
		return y;
	}

	/**
	 * Метод устанавливает значение координаты y
	 * 
	 * @param y
	 *            новая координата y
	 */
	public void setY(int y) {
		this.y = y;
	}

	// Конструктор без параметров
	public Figure() {
		this(0, 0);
	}

	// Конструктор с параметрами
	public Figure(int x, int y) {
		this.x = x;
		this.y = y;
	}

	/*
	 * Методы класса: 1) метод вывода на экран; 2) метод для перемещения; 3)
	 * метод масштабирования - умножения значений координат на масштабный
	 * коэффициент. 4) абстрактный метод подсчета площади
	 */

	/**
	 * Метод служит для представления объекта в виде строки. Требуется для
	 * вывода строки на экран.
	 */
	public String toString() {
		return ": " + x + "; " + y + "; ";
	}

	/**
	 * Метод для вывода строки на экран
	 */
	// this - ссылка на объект
	public void print() {
		System.out.println(this);
	}

	/**
	 * Метод перемещения
	 * 
	 * @param dx
	 *            перемещение координаты dx
	 * @param dy
	 *            перемещение координаты dy
	 */
	public void move(int dx, int dy) {
		x += dx;
		y += dy;
	}

	/**
	 * Метод маштабирования координат
	 * 
	 * @param k
	 *            новая переменная
	 */
	public void zoom(int k) {
		this.x *= k;
		this.y *= k;
	}

	/**
	 * Абстрактнный метод для получения площади
	 * 
	 * @return возвращает площадь
	 */
	public abstract double area();
}
